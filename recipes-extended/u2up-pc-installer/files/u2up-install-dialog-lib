#!/bin/bash
#
# A u2up-yocto instalation/upgrade dialog library
#
#set -xe

U2UP_INSTALL_DIALOG_LIB_SOURCED=yes

display_result() {
	dialog \
		--backtitle "${U2UP_BACKTITLE}" \
		--title "$1" \
		--no-collapse \
		--msgbox "$2" 6 75
}

display_msg() {
	dialog \
		--backtitle "${U2UP_BACKTITLE}" \
		--title "$1" \
		--cr-wrap \
		--no-collapse \
		--msgbox "$2" $3 75
}

display_yesno() {
	dialog \
		--backtitle "${U2UP_BACKTITLE}" \
		--title "$1" \
		--cr-wrap \
		--no-collapse \
		--yesno "$2" $3 75
}

get_item_selection() {
	echo $@ | sed 's/RENAMED //' | sed 's/: .*/:/'
}

display_target_hostname_submenu() {
	local current_set=""
	local current_item=""
	local conf_dir=${1}
	local target_hostname_current=${2:-"$(hostname)"}
	local rv=0

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Hostname configuration [${target_hostname_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 6 \
			"Hostname:" ${target_hostname_current} \
		2>&1 1>&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_target_hostname_selection ${conf_dir} $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_target_hostname_selection ${conf_dir} "Hostname: ${target_hostname_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_target_admin_submenu() {
	local current_set=""
	local current_item=""
	local conf_dir=${1}
	local target_admin_name_current=${2:-"admin"}
	local rv=0

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Hostname configuration [${target_admin_name_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 6 \
			"Admin name:" ${target_admin_name_current} \
		2>&1 1>&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_target_admin_selection ${conf_dir} $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_target_admin_selection ${conf_dir} "Admin name: ${target_admin_name_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_net_segment_ifname_submenu() {
	local conf_dir=${1}
	local net_segment_name=${2}
	local net_segment_ifname_current=${3}
	local radiolist=""
	local tag="start_tag"
	local ifname=""
	local mac=""
	local none=""
	local if1=""
	local_if2=""

	if [ -f "${conf_dir}/${U2UP_NETWORK_EXTERNAL_CONF_FILE}" ]; then
		source ${conf_dir}/${U2UP_NETWORK_EXTERNAL_CONF_FILE}
	fi
	if [ -f "${conf_dir}/${U2UP_NETWORK_INTERNAL_CONF_FILE}" ]; then
		source ${conf_dir}/${U2UP_NETWORK_EXTERNAL_CONF_FILE}
	fi
	if [ -f "${conf_dir}/${U2UP_NETWORK_HOME_CONF_FILE}" ]; then
		source ${conf_dir}/${U2UP_NETWORK_HOME_CONF_FILE}
	fi
	case $net_segment_name in
	External)
		if1=$u2up_NET_INTERNAL_IFNAME
		if2=$u2up_NET_HOME_IFNAME
		;;
	Internal)
		if1=$u2up_NET_EXTERNAL_IFNAME
		if2=$u2up_NET_HOME_IFNAME
		;;
	Home)
		if1=$u2up_NET_INTERNAL_IFNAME
		if2=$u2up_NET_EXTERNAL_IFNAME
		;;
	*)
		return
		;;
	esac
	if [ -z "${net_segment_ifname_current}" ]; then
		none="on"
	else
		none="off"
	fi
	radiolist=$(ip link | grep "BROADCAST,MULTICAST" | sed 's/[0-9]*: //' | sed 's/: .*//g' | while read ifname; do
		if [ -n "$ifname" ] && [ "$ifname" != "$if1" ] && [ "$ifname" != "$if2" ] && [[ "$ifname" != "$tag"* ]]; then
			if [ "${tag}" == "start_tag" ]; then
				echo -n "none|-|${none}|"
			fi
			tag=$ifname
			mac="$(ip link show dev $ifname | grep "link\/ether" | sed 's/ *link\/ether *//' | sed 's/ .*//')"
			if [ -n "$net_segment_ifname_current" ] && [ "$tag" == "$net_segment_ifname_current" ]; then
				echo -n "${tag}|"$mac"|on|"
			else
				echo -n "${tag}|"$mac"|off|"
			fi
		fi
	done)

	exec 3>&1
	selection=$(IFS='|'; \
	dialog \
		--backtitle "${U2UP_BACKTITLE}" \
		--title "Network ${net_segment_name} Interface selection" \
		--clear \
		--cancel-label "Cancel" \
		--radiolist "Please select:" $HEIGHT $WIDTH 0 \
		${radiolist} \
	2>&1 1>&3)
	exit_status=$?
	exec 3>&-

	case $exit_status in
	$DIALOG_CANCEL|$DIALOG_ESC)
		clear
		echo "Return from submenu." >&2
		return 0
		;;
	esac

	if [ "x${selection}" != "xnone" ]; then
		mac="$(ip link show dev $selection | grep "link\/ether" | sed 's/ *link\/ether *//' | sed 's/ .*//')"
	else
		mac="none"
	fi
	save_u2up_net_segment_iface_selection $conf_dir $net_segment_name $selection
	save_u2up_net_segment_mac_selection $conf_dir $net_segment_name $mac
}

display_net_external_config_submenu() {
	local conf_dir=${1}
	local net_segment_name=${2}
	local net_external_mac_addr_current=${3}
	local net_external_addr_mask_current=${4:-"192.168.0.1/24"}
	local net_external_gw_current=${5:-"192.168.0.1"}
	local net_external_ifname_current=""
	local current_set=""
	local current_item=""
	local rv=0

	net_external_ifname_current=$(get_net_segment_ifname_set $conf_dir External)
	if [ -z "${net_external_ifname_current}" ]; then
		display_result "Network external interface check" "Please select your network external interface!"
		return 1
	fi

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Network configuration [${net_external_ifname_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 14 \
			"MAC address:" "${net_external_mac_addr_current}" \
			"IP address/mask:" ${net_external_addr_mask_current} \
			"IP gateway:" ${net_external_gw_current} \
		2>&1 >&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_net_segment_config_selection ${conf_dir} External $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_net_segment_config_selection ${conf_dir} External "MAC address: ${net_external_mac_addr_current}"
			(( rv+=$? ))
			save_u2up_net_segment_config_selection ${conf_dir} External "IP address/mask: ${net_external_addr_mask_current}"
			(( rv+=$? ))
			save_u2up_net_segment_config_selection ${conf_dir} External "IP gateway: ${net_external_gw_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_net_internal_config_submenu() {
	local conf_dir=${1}
	local net_segment_name=${2}
	local net_internal_mac_addr_current=${3}
	local net_internal_addr_mask_current=${4:-"192.168.1.1/24"}
	local net_internal_ifname_current=""
	local current_set=""
	local current_item=""
	local rv=0

	net_internal_ifname_current=$(get_net_segment_ifname_set $conf_dir Internal)
	if [ -z "${net_internal_ifname_current}" ]; then
		display_result "Network internal interface check" "Please select your network internal interface!"
		return 1
	fi

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Network configuration [${net_internal_ifname_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 14 \
			"MAC address:" "${net_internal_mac_addr_current}" \
			"IP address/mask:" ${net_internal_addr_mask_current} \
		2>&1 >&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_net_segment_config_selection ${conf_dir} Internal $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_net_segment_config_selection ${conf_dir} Internal "MAC address: ${net_internal_mac_addr_current}"
			(( rv+=$? ))
			save_u2up_net_segment_config_selection ${conf_dir} Internal "IP address/mask: ${net_internal_addr_mask_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_net_home_config_submenu() {
	local conf_dir=${1}
	local net_segment_name=${2}
	local net_home_mac_addr_current=${3}
	local net_home_addr_mask_current=${4:-"192.168.2.1/24"}
	local net_home_ifname_current=""
	local current_set=""
	local current_item=""
	local rv=0

	net_home_ifname_current=$(get_net_segment_ifname_set $conf_dir Home)
	if [ -z "${net_home_ifname_current}" ]; then
		display_result "Network home interface check" "Please select your network home interface!"
		return 1
	fi

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Network configuration [${net_home_ifname_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 14 \
			"MAC address:" "${net_home_mac_addr_current}" \
			"IP address/mask:" ${net_home_addr_mask_current} \
		2>&1 >&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_net_segment_config_selection ${conf_dir} Home $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_net_segment_config_selection ${conf_dir} Home "MAC address: ${net_home_mac_addr_current}"
			(( rv+=$? ))
			save_u2up_net_segment_config_selection ${conf_dir} Home "IP address/mask: ${net_home_addr_mask_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_local_domain_submenu() {
	local current_set=""
	local current_item=""
	local conf_dir=${1}
	local local_domain_current=${2:-"localdomain"}
	local forward_dns1_current=${3}
	local forward_dns2_current=${4}
	local rv=0

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Local Domain configuration [${local_domain_current}]" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 9 \
			"Local Domain:" "${local_domain_current}" \
			"Forward DNS1:" "${forward_dns1_current}" \
			"Forward DNS2:" "${forward_dns2_current}" \
		2>&1 1>&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_local_domain_selection ${conf_dir} $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_local_domain_selection ${conf_dir} "Local Domain: ${local_domain_current}"
			(( rv+=$? ))
			save_u2up_local_domain_selection ${conf_dir} "Forward DNS1: ${forward_dns1_current}"
			(( rv+=$? ))
			save_u2up_local_domain_selection ${conf_dir} "Forward DNS2: ${forward_dns2_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_acme_account_email_submenu() {
	local current_set=""
	local current_item=""
	local acme_account_email_current=${1:-"none"}
	local rv=1

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Acme Account Email" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 12 \
			"Email:" ${acme_account_email_current} \
		2>&1 >&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac
		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_acme_account_email_selection ${U2UP_INSTALL_CONF_DIR} $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_acme_account_email_selection ${U2UP_INSTALL_CONF_DIR} "Email: ${acme_account_email_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

display_install_repo_config_submenu() {
	local current_set=""
	local current_item=""
	local install_repo_base_url_current=${1:-"http://192.168.1.113:5678"}
	local rv=1

	check_install_repo_config_set
	rv=$?
	if [ $rv -ne 0 ]; then
		return $rv
	fi

	while true; do
		exec 3>&1
		selection=$(IFS='|'; \
		dialog \
			--backtitle "${U2UP_BACKTITLE}" \
			--title "Installation packages repo" \
			--clear \
			--default-item "$current_item" \
			--cancel-label "Cancel" \
			--extra-label "Change" \
			--cr-wrap \
			--inputmenu "\nPlease set:" $HEIGHT 0 12 \
			"Base URL:" ${install_repo_base_url_current} \
		2>&1 >&3)
		exit_status=$?
		exec 3>&-

		case $exit_status in
		$DIALOG_CANCEL|$DIALOG_ESC)
			clear
			echo "Return from submenu." >&2
			return 1
			;;
		esac

		current_item="$(get_item_selection $selection)"
		current_set="$(save_u2up_install_repo_selection ${U2UP_INSTALL_CONF_DIR} $selection)"
		if [ -n "$current_set" ]; then
			#Resize pressed: set new dialog values
			eval $current_set
		else
			#Ok
			save_u2up_install_repo_selection ${U2UP_INSTALL_CONF_DIR} "Base URL: ${install_repo_base_url_current}"
			(( rv+=$? ))
			return $rv
		fi
	done
}

